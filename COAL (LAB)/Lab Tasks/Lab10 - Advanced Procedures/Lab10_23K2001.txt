23K2001 - Muzammil

---------------------Q1--------------------------

TITLE My Tenth Lab Tasks (Lab10.asm)
INCLUDE Irvine32.inc
.data	
	input BYTE "Enter 3 numbers: ", 0
	res BYTE "Sum of inputted 3 numbers: ", 0
.code
	main PROC
	mov eax, 0
	mov ebx, 0
	mov ecx, 0
	mov edx, 0
	
   mov edx, offset input
   call writestring
   call crlf
   call readint
   PUSH eax
   call readint
   PUSH eax
   call readint
   PUSH eax
   mov eax, 0
   call SumThree
   
   call crlf
   mov edx, offset res
   call writestring
   call writedec
   call crlf
   exit
main ENDP

SumThree PROC
  PUSH ebp
  mov ebp, esp

  mov ecx, 3
  mov esi, 8
  L1:
      add eax, [ebp + esi]
      add esi, 4
  LOOP L1

  pop ebp
  ret 12
SumThree ENDP
END main

---------------------Q2--------------------------

TITLE My Tenth Lab Tasks (Lab10.asm)
INCLUDE Irvine32.inc
.data	
	res BYTE "Average of array: ", 0
	array DWORD 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15
	avg DWORD ?
.code
	main PROC
	mov eax, 0
	mov ebx, 0
	mov ecx, 0
	mov edx, 0
	PUSH OFFSET array
    PUSH LENGTHOF array
    call ArrayAvg

    mov eax, avg
    mov edx, offset res
    call writestring
    call writedec
    call crlf

    exit
main ENDP

ArrayAvg PROC
    PUSH ebp
    mov ebp, esp

    mov ecx, [ebp + 8]
    mov esi, [ebp + 12]
    xor eax, eax
L1:
    add eax, [esi]
    add esi, TYPE array
loop L1
    mov ebx, [ebp + 8]
    xor edx, edx
    div ebx

    mov avg, eax
    pop ebp

    ret 8
ArrayAvg ENDP
END main

---------------------Q3--------------------------

TITLE My Tenth Lab Tasks (Lab10.asm)
INCLUDE Irvine32.inc

.data
    input BYTE "Enter a number: ", 0
    res BYTE "Cube: ", 0
.code
main PROC
    mov edx, offset input
    call writestring
    call readint
    call LocalCube
    exit
main ENDP

LocalCube PROC
    enter 4, 0
    mov [ebp - 4], eax
    mov eax, [ebp - 4]
    mov ebx, eax
    mul ebx
    mul ebx
    mov edx, offset res
    call writestring
    call writedec
    call crlf
    leave
    ret
LocalCube ENDP

END main

---------------------Q4--------------------------

TITLE My Tenth Lab Tasks (Lab10.asm)
INCLUDE Irvine32.inc
.data
    input BYTE "Enter 5 numbers: ", 0
    array DWORD 5 DUP(?)
    uneven BYTE "Not all numbers are even.", 0
    smallest BYTE "Smallest even number: ", 0
    x DWORD 2
.code
main PROC
    mov edx, offset input
    call writestring
    call crlf
    mov ecx, LENGTHOF array
    mov esi, OFFSET array
L1:
    call readint
    mov [esi], eax
    add esi, TYPE array
LOOP L1

    PUSH OFFSET array
    PUSH LENGTHOF array
    call checkEven
    call crlf
    exit
main ENDP

checkEven PROC
    PUSH ebp
    mov ebp, esp

    mov ecx, [ebp + 8]
    mov esi, [ebp + 12]
L2:
    mov eax, [esi]
    cdq
    div x
    cmp edx, 0
    jnz allNotEven

    add esi, TYPE array
LOOP L2

    PUSH OFFSET array
    PUSH LENGTHOF array
    call smallestEven
    jmp done

allNotEven:
    mov edx, OFFSET uneven
    call writestring

done:
    pop ebp
    ret
checkEven ENDP

smallestEven PROC
    PUSH ebp
    mov ebp, esp

    mov ecx, [ebp + 8]
    mov esi, [ebp + 12]

    mov eax, [esi]
    add esi, TYPE array
    dec ecx

L3:
    cmp [esi], eax
    jge increment
    mov eax, [esi]

    increment:
        add esi, TYPE array
LOOP L3

    mov edx, OFFSET smallest
    call writestring
    call writedec
    pop ebp
    ret
smallestEven ENDP

END main

---------------------Q5--------------------------

TITLE My Tenth Lab Tasks (Lab10.asm)
INCLUDE Irvine32.inc
.data
    array DWORD 72, 12, 29, 18, 50, 31, 82 
    before BYTE "Original array: ", 0
    after BYTE "Sorted array: ", 0
    space BYTE " ", 0
.code
main PROC
    mov edx, OFFSET before         
    call writeString            
    call crlf
    mov ecx, LENGTHOF array     
    mov esi, OFFSET array   
original:
    mov eax, [esi]              
    call writedec              
    mov edx, offset space
    call writestring
    add esi, TYPE array        
LOOP original 

    call crlf
    PUSH OFFSET array           
    PUSH LENGTHOF array         
    call BubbleSort            

    mov edx, OFFSET after         
    call writeString            
    call crlf
    mov ecx, LENGTHOF array     
    mov esi, OFFSET array       
L1:
    mov eax, [esi]              
    call writedec              
    mov edx, offset space
    call writestring
    add esi, TYPE array        
LOOP L1                     
    call crlf
    exit
main ENDP

BubbleSort PROC
    PUSH ebp
    mov ebp, esp

    mov ecx, [ebp + 8]          
    dec ecx                     
    mov esi, [ebp + 12]         

outer:
    mov edx, ecx                
    mov edi, esi                

    inner:
        mov eax, [edi]              
        mov ebx, [edi + TYPE array] 

        cmp eax, ebx                
        jle skip                  

        mov [edi], ebx              
        mov [edi + TYPE array], eax
skip:
    add edi, TYPE array         
    dec edx                   
    jnz inner              

    dec ecx                     
    jnz outer             

    pop ebp
    ret
BubbleSort ENDP

END main
